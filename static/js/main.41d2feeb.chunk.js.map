{"version":3,"sources":["index.js"],"names":["QuoteGenerator","props","state","text","author","bgColor","newQuote","bind","getRandomInt","min","max","Math","ceil","floor","random","randomColor","this","setState","fetch","then","response","json","res","catch","err","console","error","url","id","style","backgroundColor","width","length","size","className","href","title","target","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6NAKMA,E,kDACJ,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CACPC,KAAK,GACLC,OAAO,GACPC,QAAQ,QAEZ,EAAKC,SAAS,EAAKA,SAASC,KAAd,gBACd,EAAKC,aAAa,EAAKA,aAAaD,KAAlB,gBARJ,E,gDAWjB,SAAaE,EAAKC,GAGjB,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,I,sBAEvD,WAAW,IAAD,OACFK,EAASH,KAAKE,MAAsB,IAAhBF,KAAKG,UACzBC,EAAW,cAAUC,KAAKR,aAAa,GAAG,KAA/B,cAAyCQ,KAAKR,aAAa,GAAG,KAA9D,cAAwEQ,KAAKR,aAAa,GAAG,KAA7F,KACfQ,KAAKC,SAAS,CAACZ,QAAQU,IAEvBG,MAAM,+BACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAI,EAAKL,SAAS,CAACd,KAAKmB,EAAIR,GAAQX,KAAOC,OAAOkB,EAAIR,GAAQV,YACtEmB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,Q,+BAGhC,WACER,KAAKV,a,oBAGR,WACI,IAAMqB,EAAI,6CAAD,OAA8CX,KAAKd,MAAMC,MAClE,OACE,qBAAKyB,GAAG,MAAMC,MAAO,CAACC,gBAAgB,GAAD,OAAId,KAAKd,MAAMG,UAApD,SACE,sBAAKuB,GAAG,YAAYC,MAAO,CAACE,MAAM,GAAD,OAA2B,GAAvBf,KAAKd,MAAMC,KAAK6B,OAApB,OAAjC,UACI,gCACI,cAAC,IAAD,CAAaC,KAAM,KACnB,sBAAMC,UAAU,UAAUN,GAAG,OAA7B,SAAqCZ,KAAKd,MAAMC,UAEpD,sBAAKyB,GAAG,SAAR,eAAoBZ,KAAKd,MAAME,UAC/B,sBAAK8B,UAAU,UAAf,UACI,mBAAGN,GAAG,cAAcO,KAAMR,EAAKS,MAAM,mBAAmBC,OAAO,SAASR,MAAO,CAACC,gBAAgB,GAAD,OAAId,KAAKd,MAAMG,UAA9G,SAA0H,cAAC,IAAD,MAC1H,wBAAQiC,KAAK,SAASV,GAAG,YAAYW,QAASvB,KAAKV,SAAUuB,MAAO,CAACC,gBAAgB,GAAD,OAAId,KAAKd,MAAMG,UAAnG,mC,GA5CWmC,IAAMC,WAoDnCC,IAASC,OAAO,cAAC3C,EAAD,IAAmB4C,SAASC,eAAe,U","file":"static/js/main.41d2feeb.chunk.js","sourcesContent":["import React,{ Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { FaQuoteLeft, FaTwitter } from 'react-icons/fa'\n\nclass QuoteGenerator extends React.Component {\n  constructor(props){\n      super(props);\n      this.state={\n          text:'',\n          author:'',\n          bgColor:'teal'\n      };\n      this.newQuote=this.newQuote.bind(this);\n      this.getRandomInt=this.getRandomInt.bind(this);\n\n  }\n   getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n  newQuote(){\n      let random = Math.floor(Math.random() * 100 );\n      let randomColor = `rgb(${this.getRandomInt(50,180)} , ${this.getRandomInt(50,180)} , ${this.getRandomInt(50,180)})`;\n      this.setState({bgColor:randomColor})\n      \n      fetch('https://type.fit/api/quotes')\n       .then(response => response.json())\n       .then(res => this.setState({text:res[random].text , author:res[random].author}))\n       .catch(err => console.error(err))\n    }\n\n   componentDidMount(){\n     this.newQuote();\n  }\n\n  render(){\n      const url=`https://www.twitter.com/intent/tweet?text=${this.state.text}`\n      return(\n        <div id='app' style={{backgroundColor:`${this.state.bgColor}`}}>\n          <div id='quote-box' style={{width:`${this.state.text.length*15}px`}}>\n              <div>\n                  <FaQuoteLeft size={25} /> \n                  <span className='fade-in' id='text'>{this.state.text}</span>\n              </div>\n              <div id='author'>- {this.state.author}</div>\n              <div className='buttons'>\n                  <a id='tweet-quote' href={url} title='share on twitter' target='_blank' style={{backgroundColor:`${this.state.bgColor}`}}><FaTwitter /></a>\n                  <button type='button' id='new-quote' onClick={this.newQuote} style={{backgroundColor:`${this.state.bgColor}`}} >New Quote</button>\n              </div>\n          </div>\n          </div>\n      )\n  }\n}\n\nReactDOM.render(<QuoteGenerator />,document.getElementById('root'));\n\n\n"],"sourceRoot":""}